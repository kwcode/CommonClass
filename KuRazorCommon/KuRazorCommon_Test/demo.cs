//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace KuRazorCommon.Dynamic
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using Model;
    using UICommon;


    public class ddd : KuRazorCommon.TemplateBase<dynamic>
    {

#line hidden

        public ddd()
        {
        }

        public override void Execute()
        {

            //二级导航栏_C
            var UserID = Model.UserID;
            List<UserNavigationBarEntity> NavList = DAL.UserNavigationBarDAL.GetList2("ID,OpenType,Title,Url,PageMenu1_Code,SubTitle", UserID);

            WriteLiteral("\r\n\r\n<div");

            WriteLiteral(" class=\"ku-mk ku-mk10102\"");

            WriteLiteral(">\r\n");


            if (NavList != null && NavList.Count > 0)
            {

                WriteLiteral("        <div");

                WriteLiteral(" class=\"ku-mk-nav\"");

                WriteLiteral(">\r\n            <ul");

                WriteLiteral(" class=\" ku-nav clearfix\"");

                WriteLiteral(">\r\n");


                foreach (UserNavigationBarEntity item in NavList)
                {

                    WriteLiteral("                    <li>\r\n                        <a");

                    WriteAttribute("title", Tuple.Create("  title=\"", 532), Tuple.Create("\"", 552)
                    , Tuple.Create(Tuple.Create("", 541), Tuple.Create<System.Object, System.Int32>(item.Title
                    , 541), false)
                    );

                    WriteLiteral("   ");

                    Write(item.OpenType == 1 ? "target=\"_blank\"" : "");

                    WriteLiteral("  href=\"");

                    Write(item.Url);

                    WriteLiteral("\" >\r\n                            <div>");

                    Write(item.Title);

                    WriteLiteral("</div>\r\n                            <span>");

                    Write(item.SubTitle);

                    WriteLiteral("</span>\r\n                        </a>\r\n");


                    if (item.PageMenu1_Code > 0)
                    {
                        UserPageMenu1Entity pageMenuEntity = DAL.UserPageMenu1DAL.Get_98(item.PageMenu1_Code, UserID, "SubMenuCode,IsSubMenu,ID");
                        int IsSubMenu = pageMenuEntity.IsSubMenu;
                        if (IsSubMenu == 1)//有下一级
                        {
                            //有下级检测 
                            List<NavSubMenuEntity> subMenuList = NavHelper.GetSubMenuList(item.PageMenu1_Code, pageMenuEntity.SubMenuCode, UserID);
                            if (subMenuList != null && subMenuList.Count > 0)
                            {

                                WriteLiteral("                            <div");

                                WriteLiteral(" class=\"nav-sub-box\"");

                                WriteLiteral(">\r\n                                <div");

                                WriteLiteral(" class=\"nav-sub\"");

                                WriteLiteral(">\r\n");


                                foreach (NavSubMenuEntity itemSub in subMenuList)
                                {

                                    WriteLiteral("                                        <a ");

                                    Write(itemSub.Href);

                                    WriteLiteral(" title=\"");

                                    Write(itemSub.Title);

                                    WriteLiteral("\">");

                                    Write(itemSub.Title);

                                    WriteLiteral("</a>\r\n");

                                }

                                WriteLiteral("                                </div>\r\n                            </div>\r\n");

                            }
                        }
                    }

                    WriteLiteral("\r\n                    </li> \r\n");

                }

                WriteLiteral("            </ul>\r\n        </div>\r\n");

            }

            WriteLiteral("</div>\r\n");

        }
    }
}
